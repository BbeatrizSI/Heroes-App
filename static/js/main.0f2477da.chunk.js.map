{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroByPublisher.js","components/all/AllScreen.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","selectors/getHeroByName.js","components/search/SearchScreen.js","hooks/useForm.js","components/ui/NavBar.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","allHeroes","heroesList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","AllScreen","DcScreen","HeroScreen","heroId","useParams","find","length","push","goBack","MarvelScreen","getHeroByName","toLocaleLowerCase","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","onSubmit","e","preventDefault","placeholder","onChange","autoComplete","required","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2477da.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n    \r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport  PropTypes  from \"prop-types\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n       <Route {...rest} \r\n        component={ (props) => (\r\n            (isAuthenticated) ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        )}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport  PropTypes  from \"prop-types\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n       <Route {...rest} \r\n        component={ (props) => (\r\n            (!isAuthenticated) ? <Component {...props} /> : <Redirect to=\"/\" /> \r\n        )}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute;","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const handleClick = () => {\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n            \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Bárbara'\r\n            }\r\n        }) \r\n        \r\n        history.replace(lastPath);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr/>\r\n            <button className=\"btn btn-primary\" onClick= {handleClick}>\r\nLogin\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroCard = ({ id, superhero, alter_ego, first_appearance, characters}) => {\r\n    \r\n    return (\r\n        <div className=\"card ms-3 animate__animated animate__fadeIn\" style={ {maxWidth: 540} }>\r\n           <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                   <img src={`./assets/heroes/${ id }.jpg`} className=\"card-img\" alt={ superhero } />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{ superhero }</h5>\r\n                    <p className=\"card-text\">{alter_ego}</p>\r\n\r\n                    {\r\n                        ( alter_ego !== characters ) && <p className=\"card-text\">{ characters }</p>\r\n                    }\r\n\r\n                    <p className=\"card-text\">\r\n                        <small className=\"text-muted\">{ first_appearance }</small>\r\n                    </p>\r\n\r\n                    <Link to={`./hero/${ id }`}>\r\n                        Más...\r\n                    </Link>\r\n\r\n                    </div> \r\n                </div>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroCard;","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroByPublisher';\r\nimport HeroCard from './HeroCard';\r\nimport { heroes } from \"../../data/heroes\";\r\n\r\nconst HeroList = ({ publisher }) => {\r\n\r\n\r\n    const allHeroes = heroes;\r\n    const heroesList = useMemo( () => getHeroesByPublisher(publisher), [publisher]);\r\n    \r\n     \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {(publisher) ?\r\n                heroesList.map(hero => (\r\n                    <HeroCard key= {hero.id} {...hero} />\r\n                ))\r\n                :\r\n                allHeroes.map(hero => (\r\n                    <HeroCard key= {hero.id} {...hero} />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroList;","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n    \r\n    const validPublisher = ['DC Comics', 'Marvel Comics', ''];\r\n\r\n    if (!validPublisher.includes( publisher )) {\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher);\r\n}","import React from 'react';\r\nimport HeroList from '../heroes/HeroList';\r\n\r\nconst AllScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>All Heroes</h1>\r\n            <hr />\r\n            <HeroList publisher='' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllScreen;","import React from 'react';\r\nimport HeroList from '../heroes/HeroList';\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"DC Comics\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DcScreen;","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { getHeroesById } from '../../selectors/getHeroById';\r\n\r\nconst HeroScreen = ({ history }) => {\r\n\r\n    const {heroId} = useParams();\r\n\r\n    const hero = useMemo( () => getHeroesById( heroId ), [ heroId ])\r\n\r\n    if (!hero) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if(history.length <= 2) {\r\n            history.push('/');\r\n        } else {\r\n        history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters\r\n    } = hero;\r\n\r\n    \r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img src={`./assets/heroes/${ heroId }.jpg`} className=\"img-thumbnail animate__animated animate__fadeInLeft\" alt={superhero} />\r\n            </div>\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3>{ superhero }</h3>\r\n            \r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego:</b> { alter_ego }</li>\r\n                    <li className=\"list-group-item\"><b>Publisher:</b> { publisher }</li>\r\n                    <li className=\"list-group-item\"><b>First appearance:</b> { first_appearance }</li>\r\n                </ul>\r\n                <h5>Characters</h5>\r\n                <p>{ characters }</p>\r\n\r\n                <button className=\"btn btn-outline-info\" onClick={handleReturn}>\r\n                Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroScreen;","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = (id) => {\r\n    \r\n  return heroes.find( hero => hero.id === id);\r\n}","import React from 'react';\r\nimport HeroList from '../heroes/HeroList';\r\n\r\nconst MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"Marvel Comics\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarvelScreen;","import { heroes } from \"../data/heroes\";\r\n\r\nconst getHeroByName = (name = '') => {\r\n\r\n    if(name === '') {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n};\r\n\r\nexport default getHeroByName;","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport HeroCard from '../heroes/HeroCard';\r\nimport getHeroByName from '../../selectors/getHeroByName';\r\n\r\n\r\nconst SearchScreen = ({history}) => {\r\n    const location = useLocation();\r\n    const {q = ''} = queryString.parse(location.search);\r\n\r\n    const [ formValues, handleInputChange ] = useForm ({searchText: q});\r\n    const {searchText} = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroByName(q),[q])\r\n        \r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search form</h4>\r\n                    <hr/>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input type=\"text\" placeholder=\"Find your hero\" className=\"form-control\" name=\"searchText\" value={ searchText } onChange={ handleInputChange } autoComplete=\"off\" required/>\r\n                        <button type=\"submit\" className=\"btn m-1 btn-block btn-outline-primary\">Search</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr/>\r\n\r\n                    {\r\n                        (q === '') && <div className=\"alert alert-info\">\r\n                            Search a hero\r\n                        </div>\r\n                    }\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0) && <div className=\"alert alert-danger\">\r\n                            There is no hero with {q}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard key={hero.id} {...hero} />\r\n                        ))\r\n                    }\r\n\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchScreen;","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user:{name}, dispatch} = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        \r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type: types.logout,\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/all\"\r\n            >\r\n                All Heroes\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {name}\r\n                    </span>\r\n                    <button className=\"nav-item nav-link btn\" onClick={handleLogout}>\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport AllScreen from '../components/all/AllScreen';\r\nimport DcScreen from '../components/dc/DcScreen';\r\nimport HeroScreen from '../components/heroes/HeroScreen';\r\nimport MarvelScreen from '../components/marvel/MarvelScreen';\r\nimport SearchScreen from '../components/search/SearchScreen';\r\nimport { Navbar } from '../components/ui/NavBar';\r\n\r\nconst DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-3\">\r\n                <Switch>\r\n                    <Route exact path=\"/all\" component={ AllScreen } />\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    <Route exact path=\"/hero/:heroId\" component={ HeroScreen } />\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/all\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardRoutes;","import React, { useContext } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch\r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport DashboardRoutes from './DashboardRoutes';\r\n\r\nconst AppRouter = () => {\r\n\r\n  const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n      <Router>\r\n          <div>\r\n            <Switch>\r\n                <PublicRoute exact path=\"/login\" component={ LoginScreen } isAuthenticated={ user.logged } />\r\n                <PrivateRoute path=\"/\" component={ DashboardRoutes } isAuthenticated={ user.logged }/>\r\n            </Switch>\r\n          </div>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useReducer, useEffect } from 'react';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport AppRouter from './routers/AppRouter';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n}\r\n\r\nconst HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{user, dispatch}}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default HeroesApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport HeroesApp from './HeroesApp';\r\n\r\n\r\nReactDOM.render(\r\n     <HeroesApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}